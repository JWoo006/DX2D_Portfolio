컴퓨터 비밀번호 1024, 또는 4321


깃허브 , SVN 으로 작업물 관리

SVN 사용법
1. SVN 다운로드 tortoise SVN 
2. 사용할 폴더에서 우클릭 -> SVN 체크 아웃
3. 주소 넣기 svn://assortrock.synology.me/AR46
4. 아이디, 패스워드 입력
ID : AR46
PW : assortrock46


라이브러리
ㄴ 자주 사용되는 기능이나 함수 서브루틴 등등을 가르켜서 총체적으로 구현해놓은 프로젝트
ㄴ 라이브러리 구분해서 작업
ㄴ 라이브러리 코드가 바뀌면 다시 빌드 또는 다시 배포(패치)를 해줘야한다.

lib 는 링크(linking)시 필요하고 dll은 프로그램 실행시 필요하다.

동적 라이브러리
ㄴ ----.dll 파일 
ㄴ 프로그램 시작하고 있는 동안에 해당 라이브러리를 참조하여 실행한다.
ㄴ 라이브러리간 공유되는 영역이 있을 경우 메모리를 할당하여 공유함
장점
ㄴ 메모리 절약됨( 프로그램에 한번 올려진 메모리를 공유해서 사용하므로 사용공간 메모리를 절약가능)
ㄴ 업그레이드(패치)를 정적 라이브러리보다 쉽게 가능하다.(dll파일을 바꿈)
ㄴ 실행 중간에 패치가 가능하다.
단점
ㄴ 외부의존도가 높아진다.
   공유 중인 라이브러리에서 버그 발생시 프로그램 전체가 터질수 있음(단점)
ㄴ 공유 라이브러리를 메모리에 올리는데 찾고 검색하는데 시간이 걸림( 성능 저하 )



정적 라이브러리
ㄴ .lib 파일 
ㄴ 프로그램을 컴파일 하는 과정에 내가 작성한 라이브러리코드들이 포함된다.
ㄴ 라이브리간 고유의 메모리 및 역할을 가짐
장점
ㄴ 한번 완성이 되면 안정적으로 프로그램 사용이 가능하다.
ㄴ 컴파일시 필요한 라이브러리를 프로그램내에 적재하기 때문에 앱을 안정적으로 활용 가능
ㄴ 세분화 가능, 특정 라이브러리 터질 시 해당 라이브러리만 디버깅 가능
ㄴ 런타임 시 외부를 참조할 필요가 없기때문에 속도에서 장점이 있다.// 
단점
ㄴ 용량이 늘어남 
ㄴ 라이브러리 변경이 필요할 시 변경된 라이브러리를 재배포하면 안되고
   모든 프로그램을 처음부터 다시 빌드하여 새로운 버전으로 배포를 진행해줘야 한다.
 
첫날 라이브러리 개념과 세팅

윈도우 데스크톱 마법사 프로젝트와 정적 라이브러리 프로젝트 하나 추가
ㄴ 미리 컴파일된 헤더 사용안함
ㄴ 다른 프로젝트간 라이브러리 사용하는 방법

라이브러리 추가 방법
ㄴ 소스코드로 추가(x64 빌드 폴더 라이브러리 파일 경로 입력)
ㄴ 비주얼 스튜디오 옵션에서 추가하는 설정

ㄴ 참조 추가
ㄴ 추가 포함 디렉토리 $(ProjectDir);$(SolutionDir);$(SolutionDir)Engine_SOURCE;%(AdditionalIncludeDirectories) 추가
ㄴ 엔진 소스 라이브러리내의 헤더파일 참조가능

셰이더 코드
ㄴ 물체를 그리는 로직을 가진 코드
dx HLSL 셰이더코드
opengl GLSL
vulkan glsl hlsl

깃허브 주소
https://github.com/JWoo006/DX2D_Portfolio

노션 링크
https://www.notion.so/d80fe2661257461182ac771140d07260?v=3deaa804edff4c99b88e3286d466fc4b&pvs=4