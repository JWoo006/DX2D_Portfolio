버텍스 셰이더
ㄴ 로컬좌표계와 별개로 여러 오브젝트들을 월드 좌표계로 할당
원드라이브 전자 일기장 
월드변환, 카메라 공간 

월드 변환
ㄴ Local Space라고도 불리는 오브젝트 공간은 3차원 세상에서 표현될 각가의 개인공간에 정의된 영역이다
   그런데 이러한 오브젝트들을 하나가 아닌 여러 개를 한 화면에 모아놓은 공간을 World Space라고 한다.

카메라 변환
ㄴ 월드 변환이 완료되면 모든 물체가 한 공간(World Space)에 모아지면 원하는 시점에서 오브젝트들을 관찰할수 있어야 함
ㄴ 가상의 카메라가 필요하고 카메라가 볼 수 있는 영역의 공간 혹은 뷰 공간이라고 한다
   월드 공간의 모든 물체를 카메라 공간으로 변환하게되면 효율적으로 렌더링 작업을 수행할수 있다.
ㄴ 시야각 제한을 둬서 안보이는 오브젝트들은 렌더링을 하지않아 연산을 효율적으로 함

용어 정리
FOV - 시야각
aspect 종횡비 - 세로 : 가로 비율의 화면 비율
ㄴ 모바일, 콘솔 각각 기기에따른 종횡비 해상도에따른 종횡비 코드로 설정
view volume 뷰 볼륨 - 시야의 가시영역을 지칭
n(near) f(far) 
뷰 프로스트 컬링 
view frustrum 절두체
ㄴ 절두체 공간 밖에 있는 물체는 그리지 않는데, 우리가 살고 있는 3차원 세상은 모든걸 보여준다.
ㄴ 계산의 효율성을 위해 도입된 개념
ㄴ 만약 오브젝트가 절두체의 경계에 걸치게 되면 부분은 잘려 버리게 되고 이를 클리핑이라고한다.
ㄴ 클리핑은 카메라 변환과정에서 일어나지않고 나중에 클립 공간에서 실행됨

Projection(투영) 변환
ㄴ 카메라 변환에서 월드의 모든 물체를 카메라 공간으로 이동시켰고, 내부 카메라 시점에서 바라보는 3차원 공간이 존재한다.
ㄴ 하지만 최종적으로 바라보는 공간은 모니터(2차원)이 되어야한다.
ㄴ 변환하기 위해서 멀리있는 오브젝트는 작게 , 멀리있는 물체일수록 소실점에 가깝게 처리
ㄴ 투영변호나은 이러한 원근법을 구현하기 위해 카메라 공간에서 정의된 기존의 절두체(사다리꼴)를 축에 나란한 직육면체 볼륨으로
   변경하여 카메라 공간의 모든 오브젝트를 3차원 클립 스페이스로 변환하는 것을 의미한다.
ㄴ 투영 변환은 2차원 변환이 아닌 또 다른 3차원 물체로 변형되는 과정이다.
ㄴ 지금 변환하는 과정이 3차원인지 2차원인지 염두에 두고 코딩하자
ㄴ 투영 변환을 거친 물체들을 관찰해보면 절두체 뒤쪽에 있던 영역의 폴리곤은 상대적으로 작아지며 이는 원근번이 적용시켜야한다.
ㄴ 직육면체 볼륨으로 물체들을 변환 시키는경우 좀더 간단한 공식으로 로직을 완성할수있다.

Tesselation 테셀레이션
ㄴ 원근의 차이로 정점의 갯수나 폴리곤 면적을 조절함
ㄴ 회사의 작업방식으로는 로우 폴리곤, 하이 폴리곤의 모델링을 여러개 준비함
ㄴ 주어진 모델의 정점을 더 잘게 쪼개서 디테일하게 표현 할 수 있고, 듬성듬성 정점을 합쳐서 단순하게 표현하여 최적화 성능을 올릴 수 있다. 
ㄴ 위의 기술을 LOD(Level Of Detail)이라함
ㄴ 테셀레이션을 사용하려면 하나의 모델에 여러 해상도(로우 폴리곤, 하이 폴리곤)을 가지고 적용할 필요가 있다.

Geometry 기능
ㄴ 기본 도형에서 정점을 추가하거나 삭제하여 모델을 변경 할 수 있는 셰이더이다.
ㄴ Geometry Shader로 정점정보를 조금 추가하여 표현할수있는 모델이라면 그만큼의 정점정보를 빼고 저장할 수 있으므로 디스크 용량과
   그래픽 메모리에 도움이 될수 있으며, 테셀레이션등올 추가된 정점들을 표현할때도 사용
ㄴ gpu안에 복사해서 이동

Rasterizer 레스터화
ㄴ 픽셀데이터화 시키는과정
ㄴ 프래그먼트 셰이더라고도 함
ㄴ 정점 처리 단계를 지난 정점은 레스터라이저 단계로 들어간다
ㄴ 정점들은 삼각형으로 묶어지는데 이 시점부터는 하나의 도형이 독자적으로 처리가 된다.
ㄴ 화면에 그려질 2차원 삼각형의 세 정점이 결정되면 다음과 같은 과정이 진행된다.
 1. 삼각형이 포함하는 모든 픽셀마다 픽셀 셰이더가 실행된다.
 2. 삼각형의 세 정점에 할당되었던 여러 데이터(좌표, uv등등)등의 데이터는 보간이 되어 삼각형 내부의 각각 픽셀데이터로 넘어온다.
  ㄴ 인자로 정점데이터 좌표를 받으면 픽셀 데이터의 좌표 정보를 보간해서 알아서 추려준다 (레스터라이저가 )
  ㄴ 정점에서 자동으로 보간된 픽셀 데이터를 쓸지 아니면 픽셀에서 좌표를 설정해서 색을 넣을지 결정

direct3D에서는 이러한 과정들을 통틀어서 레스터라이제이션이라고 부른다.
ㄴ 이는 고정 파이프라인 단계로 프로그래밍이 불가능하여 하드웨어 자체 알고리즘을 통해 동작

레스터화 단계
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=jidon333&logNo=220491345182

클리핑
ㄴ 클리핑은 투영 변환 이후의 클립공간 볼륨 바깥에 놓인 폴리곤들을 잘라내는 작업을 말한
ㄴ 이전부터 언급되었던 이 작업이 바로 레스터라이저 작업

원근 나눗셈
ㄴ 현재 단계에서 투영변환을 통해 원근법이 적용된 3차원 물체들을 직육면체 클리핑 공간에 정의되어있다
ㄴ 원근 나눗셈과 행렬 연관성
ㄴ z좌표로 모든 성분을 나눠버리면 1이되서 없어진다. 원근 나눗셈이 적용된 이후의 좌표계로 변환되는데 이는 NDC(normalize device coordinate)
   공간이라 함

뒷면제거
ㄴ 레스터라이저가 하는 기능올 카메라가 바라보지 않는 뒷면은 연산을 할 필요가 없다.
ㄴ 외적(Cross Product) 삼각형의 바라보고있는 면의 방향을 구하여 뒷면일 경우에 연산에어 제외 시키다.

뷰포트 변환
ㄴ 컴퓨터 화면 상의 윈도우 스크린 공간을 갖는데 이 스크린 공간 내에 2차원 이미지가 그려질 뷰 포트가 정의되는데 NDC공간의 물체들을 
   스크린 공간으로 이전시키는 변환을 뷰포트 변환이라고 한다. 

스캔 변환
ㄴ 삼각형 하나가 내부에 차ㅣ지하는 모든 픽셀(fragment)들을 생성하는 작업이다.
   이때 정점 데이터에 들어온 데이터들은 보간(선형보간)되어서 픽셀셰이더로 넘어간다.
pixel shader
ㄴ 레스터화된 도형에 텍스쳐 매핑, 법선 매핑, 노말 매핑, 기법으로 텍스쳐
   를 입혀서 색을 표현한다.원한다면 특정색깔로 표현이 가능하다.
   조명처리나 이미지 처리를 할때 유용하게 사용된다.
output merger
ㄴ 깊이 -스텐실 테스트와 블렌딩이 일어나서 최종적인 렌더타겟(frame buffer)물체를 그려줍니다 

